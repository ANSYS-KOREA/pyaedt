name: Linux_CPython_UnitTests

env:
  python.version: 3.9

on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
      tags:
        description: 'Linux CPython daily'
  schedule:  # UTC at 0100
    - cron:  '0 1 * * *'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: [Linux, pyaedt]
    strategy:
      matrix:
        python-version: [3.9]
    steps:
      - name: Set up Python3
        run: |
          sudo yum update -y
          sudo yum install epel-release

          sudo yum groupinstall "Development Tools" -y
          sudo yum install gcc open-ssl-devel bzip2-devel libffi-devel -y
          sudo wget https://www.python.org/ftp/python/3.10.2/Python-3.10.2.tgz
          sudo tar -xzf Python-3.10.2.tgz
          ls -a
          cd Python-3.10.2
          ./configure --enable-optimizations
          sudo make altinstall
          python3.10 -V
          python3 --version
          pip --version

      - uses: actions/checkout@v3
      - name: 'Install pyaedt'
        run: |
          sudo pip3 install --upgrade pip
          python3 -m pip install virtualenv
          python3 -m venv .pyaedt_test_env
          source .pyaedt_test_env/bin/activate
          python3 -m pip install wheel setuptools -U
          python3 -c "import sys; print(sys.executable)"
          pip3 install .
          pip3 install -r requirements_test.txt
          pip3 install pytest-azurepipelines
          cp "C:\actions-runner\opengl32.dll" "testenv\Lib\site-packages\vtkmodules"
          mkdir tmp
          cd tmp
          python -c "import pyaedt; print('Imported pyaedt')"

      - name: 'Unit testing'
        run: |
          testenv\Scripts\Activate.ps1
          pytest -n 4 --dist loadfile -v --cov=pyaedt --cov=_unittest --cov-config=.coveragerc --cov-report=xml --cov-report=html --junitxml=junit/test-results.xml _unittest -p no:faulthandler

      - name: Upload pytest test results
        uses: actions/upload-artifact@v3
        with:
          name: pytest-results
          path: junit/test-results.xml
        if: ${{ always() }}
