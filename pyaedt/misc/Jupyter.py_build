# -*- coding: utf-8 -*-
"""
* * * This script launches a Jupyter Notebook. * * *

This script makes a copy of the referenced Jupyter Notebook script, ``Lib/jupyter_template.ipynb``, to the project
directory and launches it.

"""
import os
import random
import string
import sys

sys.path.append(os.path.normpath(os.path.dirname(os.path.realpath(__file__))))
from Lib import pyaedt_toolkit_methods

is_linux = os.name == "posix"

if is_linux:
    import subprocessdotnet as subprocess
else:
    import subprocess


def main():
    # Launch file
    proj_dir = oDesktop.GetProjectDirectory()
    os.chdir(proj_dir)

    version = oDesktop.GetVersion()[2:6].replace(".", "")
    current_dir = os.path.dirname(os.path.abspath(os.path.realpath(__file__)))
    pyaedt_toolkit_dir = os.path.normpath(os.path.join(current_dir, r"##TOOLKIT_REL_LIB_DIR##"))
    jupyter_exe = r"##JUPYTER_EXE##" % version
    template = os.path.join(pyaedt_toolkit_dir, "jupyter_template.ipynb")
    target = os.path.join(proj_dir, generate_unique_name("pyaedt", ".ipynb", n=3))
    pyaedt_toolkit_methods.check_file(oDesktop, jupyter_exe)
    pyaedt_toolkit_methods.check_file(oDesktop, template)

    with open(template, "r") as source:
        with open(target, "w") as t:
            for line in source:
                line = line.replace("PROCESSID", str(oDesktop.GetProcessID())).replace(
                    "AEDTVERSION", oDesktop.GetVersion()[:6]
                )
                t.write(line)
    if is_linux:
        pyaedt_toolkit_methods.set_linux_environment(oDesktop)

        command = [jupyter_exe, "lab", target]
        subprocess.Popen(command)
    else:
        command = ['"{}"'.format(jupyter_exe), "lab", '"{}"'.format(target)]
        subprocess.Popen(" ".join(command))


def generate_unique_name(rootname, suffix="", n=6):
    char_set = string.ascii_uppercase + string.digits
    unique_name = rootname + "_" + "".join(random.choice(char_set) for _ in range(n))
    if suffix:
        unique_name += suffix
    return unique_name


if __name__ == "__main__":
    main()
